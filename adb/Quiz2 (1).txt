
Name: Naga Sai Rishindra Popuri
Last 4 digits ID: 1001866373

CSE 6331, Cloud Computing					


Quiz Q2, Summer 2022   (c) DL, UTA, 2022


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please show or send the link, raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     ________NP_________

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4. Using the cloud services provider, all functionality possible should be implemented on that provider.
    (Of course, displaying web pages through a browser and the user interface is "local")
    The cloud provider is MS Azure.

 5. Upload all data files (*jpg and *csv, not this quiz) to the cloud service.

 6. Please create a relational database (your choice which) from the .csv data on the cloud provider, you may do this manually 
    or in code, it is your choice.
  
 7. Please put your name and ID on each page you show for this quiz.

Show and submit code, when each part is complete, raise your hand and then show us:

For the following you may (if you wish) normalize all latitudes and longitudes to between 0 and 360 degrees, by adding 180 to all values.

 10. (Web page) Allow a user to give a minimum latitude and longitude value set (X1,Y1) and a maximum latitude and longitude value set (X2,Y2)
     this creates a "bounding box" between those points. (Describes an area.)
     Then show for all the earthquakes within that area; show the time, latitide, longitude, id, and place for each quake.

{% extends "header.html"%}
{%block main%}
    <form method="post" action="/result1">
        <p>Select Min latitude and longitude :  <input type="number" step="any" name="lat1" required> and 
            <input type="number" step="any" name="long1" required> </p>     
        <p>Select Max latitude and longitude :  <input type="number" step="any" name="lat2" required> and 
                <input type="number" step="any" name="long2" required> </p>
        <!-- <p>No of earthquakes in the above range :  <input type="number" name="n" required>   -->
        <p><input type="submit"></p>
    </form>
    </div>
    {% block content %} {% endblock content %} 
{% endblock main %} 

{% extends "task1.html" %}
    {% block content %}
    <p align=center>{{count}} earthquakes occured in the specified magnitude range</p>
    
    <div align=center>
        {%block table%}
        <table border=1px solid #FF0000;>
            <caption><strong>Earthquake Records</Strong></caption>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Latitude</th>
                    <th>Longitude</th>
                    <th>ID</th>
                    <th>Place</th>
                </tr>
            </thead>
            <tbody>
                {% for item in data %}
                    <tr>
                        <td>{{item[0]}}</td>
                        <td>{{item[2]}}</td>
                        <td>{{item[3]}}</td>
                        <td>{{item[8]}}</td>
                        <td>{{item[9]}}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {%endblock table%}
      
    {% endblock content %}
@app.route("/result1", methods=["GET", "POST"])
def result1():
    formdata = dict(request.form)
    min_lat = float(formdata['lat1'])
    min_long = float(formdata['long1'])
    max_lat = float(formdata['lat2'])
    max_long = float(formdata['long2'])
    #n = int(formdata['n'])

    cr.execute("select * from ds2 where latitude > ? and latitude < ? and longitude > ? and longitude < ?",min_lat,max_lat,min_long,max_long)
    res = cr.fetchall()
    count=len(res)
    #res1 = res[:n]
    print(len(res))
    
    if(len(res)<1):
        flag=0
    else:
        flag=1
    return render_template("result1.html", data=res, flag=flag, count=count)


 11. For a value "net" (such as  "nn") and a magnitude range (for example 2.5 to 2.6), show the largest 5 magnitude quakes 
     in that "net" within the specified magnitude range. Please show same details as previous question.
{% extends "header.html"%}
{%block main%}
    <form method="post" action="/result11">
        <p>Select earthquakes with magnitude between :  <input type="text" name="mag1" required> and 
            <input type="text" name="mag2" required> </p>     
        
        <p>Enter net value :  <input type="text" name="net" required>
        <p><input type="submit"></p>
    </form>
    </div>
    {% block content %} {% endblock content %} 
{% endblock main %}

{% extends "task11.html" %}
    {% block content %}
    <p align=center>{{count}} earthquakes occured in the specified magnitude range</p>
    {%if flag==1%}
    <div align=center>
        {%block table%}
        <table border=1px solid #FF0000;>
            <caption><strong>Earthquake Records</Strong></caption>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Latitude</th>
                    <th>Longitude</th>
                    <th>ID</th>
                    <th>Place</th>
                    <th>Mag</th>

                </tr>
            </thead>
            <tbody>
                {% for item in data %}
                    <tr>
                        <td>{{item[0]}}</td>
                        <td>{{item[2]}}</td>
                        <td>{{item[3]}}</td>
                        <td>{{item[8]}}</td>
                        <td>{{item[9]}}</td>
                        <td>{{item[4]}}</td>
                        
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {%endblock table%}
    {%endif%}   
    {% endblock content %}

@app.route("/task11")
def task11():
    return render_template("task11.html")

@app.route("/result11", methods=["GET", "POST"])
def result11():
    formdata = dict(request.form)
    mag1 = float(formdata['mag1'])
    mag2 = float(formdata['mag2'])
    net = formdata['net']

    
    #n = int(formdata['n'])

    cr.execute("select * from ds2 where mag > ? and mag < ? and net = ? order by mag desc ",mag1,mag2,net)
    res = cr.fetchall()
    count=len(res)
    res1 = res[:5]
    print(len(res1))
    
    if(len(res1)<1):
        flag=0
    else:
        flag=1
    return render_template("result11.html", data=res1, flag=flag, count=count)


 12. For one single given day, given in Z time, (for example 6-15) show the net value that occurs most frequently and the one that 
     occurs least frequently (but at least once.) 

 13. Allow a user to give a first net value (such as "nn") and replacement net value (such as "rl") and replace all "nn" values with "rl",
     list the number that was replaced (how many replaced). You need to finish Question 11, before we can test this.

{% extends "header.html"%}
{%block main%}
    <form method="post" action="/result13">
        
        <p>Enter net value :  <input type="text" name="net" required>
        <p>Enter new net value :  <input type="text" name="n_net" required>
        <p><input type="submit"></p>
    </form>
    </div>
    {% block content %} {% endblock content %} 
{% endblock main %}

{% extends "task13.html" %}
    {% block content %}
    <p align=center>{{count}} Number of Records replaced</p>
    {%if flag==1%}
    <div align=center>
        {%block table%}
        <table border=1px solid #FF0000;>
            <caption><strong>Earthquake Records</Strong></caption>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Latitude</th>
                    <th>Longitude</th>
                    <th>ID</th>
                    <th>Place</th>
                    <th>Mag</th>

                </tr>
            </thead>
            <tbody>
                {% for item in data %}
                    <tr>
                        <td>{{item[0]}}</td>
                        <td>{{item[2]}}</td>
                        <td>{{item[3]}}</td>
                        <td>{{item[8]}}</td>
                        <td>{{item[9]}}</td>
                        <td>{{item[4]}}</td>
                        
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {%endblock table%}
    {%endif%}   
    {% endblock content %}

@app.route("/task13")
def task13():
    return render_template("task13.html")

@app.route("/result13", methods=["GET", "POST"])
def result13():
    formdata = dict(request.form)
    
    net = formdata['net']
    n_net = formdata['n_net']

    
    #n = int(formdata['n'])
    result = cr.execute("select * from ds2 where net=?",net)
    res = result.fetchall()
    res3= list()
    for i in res:
        cr.execute("UPDATE ds2 SET net = ? WHERE id = ?",n_net,i[7])
        cr.commit()   
        result.execute("select * from ds2 where id=?",i[7]) 
        re = result.fetchall()  
        res3 = res3+re   
        print(res3)  
    count = len(res)
    return render_template("result13.html", data=res3, count=count)


 14. Show us, in a link, the application running and we will try it out. Only for parts 10,11,12,13

 15. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.

